doctype html
html
  head
    meta(charset='utf-8')
    meta(name='viewport', content='width=device-width, initial-scale=1, maximum-scale=1')
    title Null handling in Java (Geopost)

    link(rel='stylesheet', type='text/css', href='build/build.css')

  body

    article.deck

      section
        h1 Null handling in Java (Geopost)

      section
        h1 "Billion dollars mistake"
        h3 Tony Hoare

      section
        p Make code prone to <em>NullPointerException</em>s <strong>by design</strong>.
        
      section
        h1 Two rules:
        ul.build.build-items
          li <strong>Do not pass null</strong>
          li <strong>Do not return null</strong>

      section
        h1 Collections

      section
        h1 Collections
        p Collections should <strong>never</strong> be <em>null</em>!
        pre
          code.language-java.
            List< Object > myList = Collections.emptyList();
            Set< Object > mySet = Collections.emptySet();
            Map< Object, Object > myMap = Collections.emptyMap();
            
      section
        h1 Collections in entities
        p Use <strong>@Builder.Default</strong> of Lombok
        pre
          code.language-java.
            @Builder
            public class ParcelShopRestrictions {
            
              @Builder.Default
              private Set< String > blacklistedParcelShopIds = Collections.emptySet();
            
              @Builder.Default
              private Set< Integer > blacklistedPudoTypes = Collections.emptySet();
            
              @Builder.Default
              private Set< String > blacklistedPudoServices = Collections.emptySet();
            }

      section
        h1 Optional

      section
        h1 Rules of using Optionals
        ul.build.build-items
          li Always return <strong>Optional</strong> from the methods that may return no result.
          li <strong>Optional</strong> itself should never be null!
          li Do not use <strong>Optional</strong>s as arguments of the method.

      section
        h1 Arguments
        ul.build.build-items
          li Avoid nullable arguments <strong>as much as you can</strong>!

      section
        h1 Arguments of Spring Beans methods
        p Use annotations <strong>@NotNull</strong> and <strong>@Validated</strong>.
        pre
          code.language-java.
            @Component
            @Validated
            public class ValidatingComponent {
                public int validateNotNull(@NotNull String data) {
                    return data.length();
                }
            }

      section
        h1 Arguments
        p Use annotation <strong>@Nullable</strong> processed by IDE.
        
      section
        h1 Arguments
        p Multiple overloading methods.
        font(size="-2")
          pre
            code.language-java.
              public void method(Object mandatoryArgument) {
                methodInternal(mandatoryArgument, null, null);
              }
              
              public void method(Object mandatoryArgument, Object mandatoryToto) {
                methodInternal(mandatoryArgument, mandatoryToto, null);
              }
              
              public void method(Object mandatoryArgument, Object mandatoryToto, Object mandatoryTiti) {
                methodInternal(mandatoryArgument, mandatoryToto, mandatoryTiti);
              }
              
              private void methodInternal(Object mandatoryArgument, @Nullable Object toto, @Nullable Object titi) {
              }

      section
        h1 Thank you

    script(src='build/build.js')
